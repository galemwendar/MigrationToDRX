@page "/mainpage"
@using MigrationToDRX.Data.Enums
@using MigrationToDRX.Data.Models
@using Radzen
@using Radzen.Blazor
@using System.Data
@using System.Dynamic

<div class="page-background-main">
    <RadzenComponents />

    @if (!IsConnected)
    {
        <p><b> Подключение не настроено </b><a href="/" style="color: red; font-size: 18px; background-color: lightslategray;"><b>Вернуться на страницу подключения</b></a></p>
    }

     <div class="card mb-3">
        <div class="card-body">
        <RadzenAccordion>
                <Items>
                    <RadzenAccordionItem Text="Инструкция" Icon="help" CollapseTitle="Свернуть инструкцию"
                                        ExpandTitle="Развернуть инструкцию" CollapseAriaLabel="Свернуть инструкцию"
                                        ExpandAriaLabel="Развернуть инструкцию">
                        <ol>
                            <li>Выберите сущность, с которой будете работать.</li>
                            <li>Загрузите файл с таблицей (формат ODF пока не поддерживается).</li>
                            <li>Выберите сценарий работы.</li>
                            <li>Сопоставьте таблицу со свойством выбранной сущности из выпадающего списка в таблице.</li>
                            <li>С помощью кнопки "Проверить данные" убедитесь, что загрузка возможна (еще не реализовано). </li>
                            <li>Кнопка "Загрузить" выполняет сценарий на сервере</li>
                            <li>После выполнения сценария появится кнопка с отчетом в виде таблицы (еще не реализовано).</li>
                        </ol>
                    </RadzenAccordionItem>
                </Items>
            </RadzenAccordion>
        </div>
     </div>

    <div class="card mb-3">
        <div class="card-header">
            Необходимо выбрать сущность для миграции данных
        </div>
        <div class="card-body">
            <div class="row">
            <div class="col">
                <div class="row mb-3">
                    <div class="col-3">
                        <div class="text-description">Выберите сущность</div>
                    </div>
                    <div class="col-9">
                        <RadzenDropDown Data="@EntitySets" TValue="string" TextProperty="Name" ValueProperty="Name"
                            FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                            AllowFiltering="true" @bind-Value="SelectedEntitySetName" Style="width: 100%"
                            Change="@(() => InvokeAsync(OnEntitySetsSelectChanged))" />
                    </div>
                </div>

                @if (WorkWithCollectionProperty && CollectionPropeties != null)
                {
                    <div class="row mb-3">
                        <div class="col-3">
                            <div class="text-description">Выберите свойство-коллекцию</div>
                        </div>
                        <div class="col-9">
                            <RadzenDropDown Data="@CollectionPropeties" TValue="string" TextProperty="Name" ValueProperty="Name"
                                FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                                AllowFiltering="true" @bind-Value="SelectedCollectionPropertyName" Style="width: 100%"
                                Change="@(() => InvokeAsync(OnCollectionPropertyChanged))" />
                        </div>
                    </div>
                }


                <div class="row mb-3 d-flex">
                    <div class="col-3">
                        <div class="text-description">Выберите файл для загрузки</div>
                        <div class="text-description">Поддерживаемые форматы: .xlsx, .xls, .odf, .ods, .csv</div>
                    </div>

                    <div class="col-9">
                        <RadzenUpload Accept=".xlsx,.xls,.odf,.ods,.csv" Multiple="false" Progress=@OnProgressUploadFile
                            Complete=@OnCompleteUploadFile Change="@OnFileUpload" class="upload-custom d-flex" />
                        <RadzenProgressBar Value=@progressUploadFile class="rz-mt-6" Visible=@showProgressUploadFile />
                        <RadzenButton Text="Отменить загрузку" Click=@OnCancelUploadFile Visible=@showProgressUploadFile
                            class="btn btn-primary" />
                    </div>

                </div>
            </div>

            @if(string.IsNullOrWhiteSpace(SelectedEntitySetName) == false)
            {
                <div class="col-4">
                    <h5>Сценарии работы: </h5>

                    <div class="row mb-3">
                        <div class="col-auto">
                            <RadzenSwitch Change=@(args => OnScenarioChanged(args, OdataScenario.CreateEntity)) 
                                Value="CurrentScenario == OdataScenario.CreateEntity"
                                Disabled="CurrentScenario == OdataScenario.CreateEntity"
                                InputAttributes="@(new Dictionary<string,object>(){ { "aria-label", "Switch value" }})" />
                        </div>
                        <div class="col-auto">
                            <div class="text-description">Создание сущностей (документы/справочники/прочее)</div>
                        </div>

                    </div>

                    <div class="row mb-3">
                        <div class="col-auto">
                            <RadzenSwitch Change=@(args => OnScenarioChanged(args, OdataScenario.UpdateEntity)) 
                                Value="CurrentScenario == OdataScenario.UpdateEntity"
                                Disabled="CurrentScenario == OdataScenario.UpdateEntity"
                                InputAttributes="@(new Dictionary<string,object>(){ { "aria-label", "Switch value" }})" />
                        </div>
                        <div class="col-auto">
                            <div class="text-description">Обновление сущностей</div>
                        </div>

                    </div>

                    <div class="row mb-3">
                        <div class="col-auto">
                            <RadzenSwitch Change=@(args => OnScenarioChanged(args, OdataScenario.CreateDocumentWithVersion)) 
                                Value="CurrentScenario == OdataScenario.CreateDocumentWithVersion"
                                Disabled="CurrentScenario == OdataScenario.CreateDocumentWithVersion"
                                InputAttributes="@(new Dictionary<string,object>(){ { "aria-label", "Switch value" }})" />
                        </div>
                        <div class="col-auto">
                            <div class="text-description">Создание документа с версией (для сущностей документы)</div>
                        </div>

                    </div>

                    <div class="row mb-3">
                        <div class="col-auto">
                            <RadzenSwitch Change=@(args => OnScenarioChanged(args, OdataScenario.AddVersionToExistedDocument)) 
                                Value="CurrentScenario == OdataScenario.AddVersionToExistedDocument"
                                Disabled="CurrentScenario == OdataScenario.AddVersionToExistedDocument"
                                InputAttributes="@(new Dictionary<string,object>(){ { "aria-label", "Switch value" }})" />
                        </div>
                        <div class="col-auto">
                            <div class="text-description">Добавление версии в существующий документ (для сущностей документы)</div>
                        </div>

                    </div>

                    <div class="row mb-3">
                        <div class="col-auto">
                            <RadzenSwitch Change=@(args => OnScenarioChanged(args, OdataScenario.AddEntityToCollection)) 
                                Disabled="CurrentScenario == OdataScenario.AddEntityToCollection"
                                InputAttributes="@(new Dictionary<string,object>(){ { "aria-label", "Switch value" }})" />
                        </div>
                        <div class="col-auto">
                            <div class="text-description">Добавление сущности в свойство-коллекцию (еще не реализовано)</div>
                        </div>

                    </div>

                    <div class="row mb-3">
                        <div class="col-auto">
                            <RadzenSwitch Change=@(args => OnScenarioChanged(args, OdataScenario.UpdateEntityInCollection)) 
                                Disabled="CurrentScenario == OdataScenario.UpdateEntityInCollection"
                                InputAttributes="@(new Dictionary<string,object>(){ { "aria-label", "Switch value" }})" />
                        </div>
                        <div class="col-auto">
                            <div class="text-description">Обновление сущности в свойстве-коллекции (еще не реализовано)</div>
                        </div>

                    </div>



                    @if(CurrentScenario == OdataScenario.UpdateEntity || CurrentScenario == OdataScenario.AddVersionToExistedDocument || CurrentScenario == OdataScenario.UpdateEntityInCollection)
                    {
                        <h5>Настройки</h5>
                        <div class="text-description">Поиск сущности по: (еще не реализовано)</div>
                        <div class="row mb-3">
                            <RadzenRadioButtonList @bind-Value=@SearchEntityBy TValue="int">
                                <Items>
                                    <RadzenRadioButtonListItem Text="Name" Value="1" />
                                    <RadzenRadioButtonListItem Text="Id" Value="2" />
                                </Items>
                            </RadzenRadioButtonList>
                        </div>
                    }
                    
                </div>
            }

            </div>

            <div class="row mb-3 d-flex" disabled="@columnMapping.Any()">
                <div class="col-auto"><button class="btn btn-primary" style="width: auto;"
                        @onclick="@LoadData">Загрузить
                        данные</button></div>
                <div class="col-auto"><button class="btn btn-secondary" style="width: auto;"
                        @onclick="@ValidateData">Проверить данные</button></div>
            </div>

        </div>
    </div>

    <div class="card mt-5">
        <div class="card-header">
            Необходимо сопоставить столбцы Excel со свойствами сущности
        </div>
        <div class="card-body">
            <RadzenDataGrid TItem="ExpandoObject" Data="@items" AllowColumnResize="true" AllowPaging="true"
                 AllowColumnReorder="true" PageSize="100" AllowVirtualization="true" AllowColumnPicking = "true">
                <Columns>
                    @foreach (var col in columns)
                    {
                        <RadzenDataGridColumn TItem="ExpandoObject" Title="@col">
                            <HeaderTemplate>
                                <p>@col</p>
                                <RadzenDropDown TValue="string" Data="@EntityFieldsToMap" TextProperty="Summary"
                                    FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                                    ValueProperty="Name" @bind-Value="columnMapping[col]" AllowFiltering="true"
                                    Style="width: 200%" Placeholder="Выберите свойство" />
                            </HeaderTemplate>
                            <Template Context="data">
                                @{
                                    var dict = (IDictionary<string, object>)data!;
                                    if (dict.ContainsKey(col))
                                    {
                                        <text>@dict[col]</text>
                                    }
                                }
                            </Template>
                        </RadzenDataGridColumn>
                    }
                </Columns>
            </RadzenDataGrid>
        </div>
    </div>
</div>